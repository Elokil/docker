services:

  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.insecure=true"                       # UI de Traefik (http://localhost:8080)
      - "--api.dashboard=true"
      - "--providers.docker=true"                   # Découverte auto des containers Docker
      - "--providers.docker.exposedbydefault=false" # Par défaut, ne pas exposer les containers
      - "--entrypoints.web.address=:80"             # Entrypoint HTTP
      - "--entrypoints.websecure.address=:443"      # Entrypoint HTTPS
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"                                 # Tableau de bord Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.projetaethari.com`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"

  frontend:
    build: images/nginx
    container_name: frontend
    hostname: frontend
    volumes:
      - /app/angular/dist/browser:/usr/share/nginx/html
      - ./nginx/conf.d/projetM.conf:/etc/nginx/conf.d/projetM.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - angular-builder
      - backend
    restart: unless-stopped

  backend:
    build: images/node-server
    container_name: backend
    hostname: backend
    ports:
      - "3000:3000"
    volumes:
      - /app/express:/usr/src/app
    restart: unless-stopped

  angular-builder:
    build: images/angular-builder
    container_name: angular-builder
    hostname: angular-builder
    volumes:
      - /app/angular/dockerTest:/usr/src/app
      - /app/angular/dist:/dist
    depends_on:
      - backend
    command: ["ng", "build", "--configuration", "production", "--output-path=/dist"]


################################################################################
## Plugins
################################################################################
  redis:
    image: redis:8.2.1
    container_name: redis
    hostname: redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped


################################################################################
## Outils interne
################################################################################

  outline:
    image: docker.getoutline.com/outlinewiki/outline:latest
    env_file: images/outline/docker.env
    container_name: outline
    hostname: outline
    depends_on:
      - postgres
      - redis
    volumes:
      - outline-data:/var/lib/outline/uploads
    ports:
      - "3333:3333"
    restart: unless-stopped

  postgres:
    image: postgres:17.6
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: projectdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    hostname: gitea
    depends_on:
      - postgres-gitea
    environment:
      USER_UID: 1000
      USER_GID: 1000
      DB_TYPE: postgres
      DB_HOST: postgres-gitea:5432
      DB_NAME: gitea_db
      DB_USER: gitea
      DB_PASSWD: gitea123
      APP_NAME: "Gitea"
      ROOT_URL: "http://git.projetaethari.com"
    volumes:
      - gitea-data:/data
    ports:
      - "3004:3000"
      - "2222:22"    # SSH pour Git
    restart: unless-stopped

  postgres-gitea:
    image: postgres:17.6
    container_name: postgres-gitea
    hostname: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: gitea
      POSTGRES_PASSWORD: gitea123
      POSTGRES_DB: gitea_db
    volumes:
      - postgres-gitea-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  adminer:
    image: adminer
    container_name: adminer
    hostname: adminer
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: haeckel
    volumes:
      - ./images/adminer/php.ini:/usr/local/etc/php/conf.d/upload_large_dumps.ini
    ports:
      - "8002:8080"
    networks:
      - network_local

################################################################################
## Volumes
################################################################################
volumes:
  postgres-data:
    name: postgres-data
  outline-data:
    name: outline-data
  redis-data:
    name: redis-data
  postgres-gitea-data:
    name: postgres-gitea-data
  gitea-data:
    name: gitea-data