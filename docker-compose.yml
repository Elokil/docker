services:

  backend:
    build: ./node-server
    container_name: backend
    hostname: backend
    ports:
      - "3000:3000"
    volumes:
      - /app/express:/usr/src/app
    restart: unless-stopped

  angular-builder:
    build: ./angular-builder
    container_name: angular-builder
    hostname: angular-builder
    volumes:
      - /app/angular/dockerTest:/usr/src/app
      - /app/angular/dist:/dist
    depends_on:
      - backend
    command: ["ng", "build", "--configuration", "production", "--output-path=/dist"]
  
  frontend:
    build: ./nginx
    container_name: frontend
    hostname: frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /app/angular/dist/browser:/usr/share/nginx/html
      - ./nginx/conf.d/projetM.conf:/etc/nginx/conf.d/projetM.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - angular-builder
      - backend
    restart: unless-stopped

  postgres:
    image: postgres:17.6
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: projectdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  
  redis:
    image: redis:8.2.1
    container_name: redis
    hostname: redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  outline:
    image: docker.getoutline.com/outlinewiki/outline:latest
    container_name: outline
    hostname: outline
    env_file: ./docker.env
    depends_on:
      - postgres
      - redis
    volumes:
      - outline-data:/var/lib/outline/uploads
      - outline-data-data:/var/lib/outline/data
    ports:
      - "3333:3333"
    restart: unless-stopped

  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    hostname: gitea
    depends_on:
      - postgres
    environment:
      USER_UID: 1000
      USER_GID: 1000
      DB_TYPE: postgres
      DB_HOST: postgres:5432
      DB_NAME: gitea_db
      DB_USER: admin
      DB_PASSWD: admin
      APP_NAME: "Gitea"
      ROOT_URL: "http://git.projetaethari.com"
    volumes:
      - gitea-data:/data
    ports:
      - "3004:3000"
      - "2222:22"    # SSH pour Git
    restart: unless-stopped

  portainer:
     image: portainer/portainer-ce:2.35.0
     container_name: portainer
     hostname: portainer
     restart: unless-stopped
     command: -H unix:///var/run/docker.sock --admin-password $$2y$$05$$b0DgtG94LtpeuqEKHRYYreEf2rqBI5.4Rin.38.ENaAlL/7TeKX2q
     #mot de passe : password (par default)
     ports:
       - "8003:9000"
     volumes:
       - /var/run/docker.sock:/var/run/docker.sock
       - portainer-data:/data

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    container_name: minio
    hostname: minio
    restart: unless-stopped
    command: [ "minio", "server", "/data", "--console-address", ":9001" ]
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: password
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

volumes:
  postgres-data:
    name: docker_postgres-data
  outline-data:
    name: docker_outline-data
  outline-data-data:
    name: docker_outline-data-data
  redis-data:
    name: docker_redis-data
  gitea-data:
    name: docker_gitea-data
  portainer-data:
    name: docker_portainer-data
  minio-data:
    name: docker_minio-data
